---
import "@style/tags/tags.scss";
import TagsLayout from "@src/layouts/TagsLayout.astro";
import { getCollection, type CollectionEntry } from "astro:content";
import { utils } from "@src/utils/utils";

export async function getStaticPaths({ paginate }) {
  const allPosts: CollectionEntry<"blog">[] = (
    await getCollection("blog")
  ).sort((a, b) => utils.compareDates(a.data.pubDate, b.data.pubDate));

  const uniqueCategories: string[] = [
    ...new Set(
      allPosts
        .flatMap((post) => post.data.category || [])
        .filter((category) => typeof category === "string" && category !== "")
    ),
  ];

  return uniqueCategories.flatMap((category) => {
    const filteredPosts = allPosts.filter((post) =>
      post.data.category?.includes(category)
    );
    return paginate(filteredPosts, {
      params: { category: category },
      props: { posts: filteredPosts, categories: uniqueCategories },
      pageSize: 10,
    });
  });
}

const { category } = Astro.params;
const { page, categories } = Astro.props;

console.log("Category Params:", category);
console.log("Page Props:", page);
console.log("Categories Props:", categories);

---
<TagsLayout
  page={page}
  tags={categories}
  activeTag={category}
  baseurl="/categories/"
/>